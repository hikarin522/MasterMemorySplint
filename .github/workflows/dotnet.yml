# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        options:
          - MasterMemorySplint.sln
      configuration:
        type: choice
        options:
          - Debug
          - Release
        default: Release
      pack:
        type: boolean
        default: false
      publish_github:
        type: boolean
        description: Publish to GitHub Packages
        default: false
      publish_nuget:
        type: boolean
        description: Publish to nuget.org
        default: false

env:
  target: ${{ inputs.target || 'MasterMemorySplint.sln' }}
  configuration: ${{ inputs.configuration || 'Debug' }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        global-json-file: global.json

    - name: Restore tools
      run: dotnet tool restore

    - name: Restore dependencies
      run: dotnet restore ${{ env.target }}

    - name: Format
      run: dotnet format ${{ env.target }} --no-restore --verify-no-changes --exclude 'System.Private.CoreLib/'

    - name: Build
      run: dotnet build ${{ env.target }} --no-restore -c ${{ env.configuration }}

    - name: Test
      run: dotnet test ${{ env.target }} --no-build -c ${{ env.configuration }} --verbosity normal

    - name: Pack
      if: ${{ inputs.pack }}
      run: dotnet pack ${{ env.target }} --no-build -c ${{ env.configuration }} -o artifacts --verbosity detailed

    - name: Save
      if: ${{ inputs.pack }}
      uses: actions/upload-artifact@v4
      with:
        path: artifacts

    - name: Publish GitHub Packages
      if: ${{ inputs.pack && inputs.publish_github }}
      run: dotnet nuget push "artifacts/*.nupkg" -k ${{ secrets.GITHUB_TOKEN }} -s "github" --skip-duplicate

    - name: Publish NuGet
      if: ${{ inputs.pack && inputs.publish_nuget }}
      run: dotnet nuget push "artifacts/*.nupkg" -k ${{ secrets.NUGET_OLG_API_KEY }} -s "nuget" --skip-duplicate
